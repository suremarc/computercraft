name: Controller PR Checks
on:
  pull_request:
    paths: [ k8s/**, .github/workflows/k8s.yaml, _deploy_/** ]
  push:
    branches: [ master ]

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./k8s
    strategy:
      matrix:
        target: [fmt, clippy, test]
        include:
        - target: fmt
          args: -- --check
    steps:
    - uses: actions/checkout@v5
      with:
        submodules: true

    - name: Install Mold
      uses: rui314/setup-mold@v1

    - run: cargo ${{ matrix.target }} ${{ matrix.args || '' }}

  docker:
    runs-on: ubuntu-latest
    permissions: 
      packages: write
    strategy:
      matrix:
        target: [controller, gateway]
    steps:
    - uses: actions/checkout@v5
      with:
        submodules: true

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 1200

    - name: Build and push controller image
      uses: docker/build-push-action@v4
      with:
        file: ./k8s/_docker_/${{ matrix.target }}.dockerfile
        context: k8s
        push: ${{ github.event_name != 'pull_request' }}
        tags: registry.digitalocean.com/suremarc/computercraft-${{ matrix.target }}:${{ github.sha }},registry.digitalocean.com/suremarc/computercraft-${{ matrix.target }}:latest
        build-args: |
          RELEASE_BUILD=${{ github.event_name != 'pull_request' && 'true' || ''}}

  deploy:
    runs-on: ubuntu-latest
    needs: [ docker ]
    steps:
    - uses: actions/checkout@v5
      with:
        submodules: true

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Update deployment file
      run: sed -i "s|registry.digitalocean.com/suremarc/computercraft-controller:latest|registry.digitalocean.com/suremarc/computercraft-controller:${{ github.sha }}|" _deploy_/deployment.yml
    
    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 sms

    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply ${{ github.event_name == 'pull_request' && '--dry-run=server' || '' }} -f _deploy_

    - name: Verify deployment
      if: github.event_name != 'pull_request'
      run: kubectl rollout status deployment/computercraft-controller -n computercraft
